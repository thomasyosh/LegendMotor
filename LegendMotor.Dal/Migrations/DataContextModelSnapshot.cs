// <auto-generated />
using System;
using LegendMotor.Dal;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace LegendMotor.Dal.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("LegendMotor.Domain.Models.Area", b =>
                {
                    b.Property<string>("AreaCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("AreaCode");

                    b.ToTable("Area");
                });

            modelBuilder.Entity("LegendMotor.Domain.Models.BinLocation", b =>
                {
                    b.Property<string>("BinLocationCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("isActive")
                        .HasColumnType("tinyint(1)");

                    b.HasKey("BinLocationCode");

                    b.ToTable("BinLocation");
                });

            modelBuilder.Entity("LegendMotor.Domain.Models.BinLocationSpare", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("char(36)");

                    b.Property<string>("BinLocationCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("DL")
                        .HasColumnType("int");

                    b.Property<int>("ROL")
                        .HasColumnType("int");

                    b.Property<int>("Reserved")
                        .HasColumnType("int");

                    b.Property<string>("SpareId")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("BinLocationSpare");
                });

            modelBuilder.Entity("LegendMotor.Domain.Models.BinLocationStaff", b =>
                {
                    b.Property<string>("BinLocationCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("StaffId")
                        .HasColumnType("varchar(255)");

                    b.HasKey("BinLocationCode", "StaffId");

                    b.ToTable("BinLocationStaff");
                });

            modelBuilder.Entity("LegendMotor.Domain.Models.Position", b =>
                {
                    b.Property<string>("PositionCode")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("PositionCode");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("LegendMotor.Domain.Models.Spare", b =>
                {
                    b.Property<string>("SpareId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasColumnType("varchar(1)");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<int>("Weight")
                        .HasColumnType("int");

                    b.HasKey("SpareId");

                    b.ToTable("Spare");
                });

            modelBuilder.Entity("LegendMotor.Domain.Models.Staff", b =>
                {
                    b.Property<string>("StaffId")
                        .HasColumnType("varchar(255)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("AreaCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Gemder")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("PositionCode")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("StaffId");

                    b.ToTable("Staff");
                });
#pragma warning restore 612, 618
        }
    }
}
